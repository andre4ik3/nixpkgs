{ config, pkgs, lib, ... }:

let
  pcpCfg = config.services.pcp;
  cfg = pcpCfg.inference;

  ruleSubmodule = {
    options = {
    };
  };

  pmieConfig = pkgs.writeText "pmie.control" ''
    # This file is generated by Nix. Do not edit!
    # Instead, configure `pmie` through the `services.pcp.inference` NixOS options.

    # Configuration format version.
    $version=1.1

    # Primary instance -- generated from `services.pcp.inference.instances.primary`.

    # Secondary instances -- generated from `services.pcp.inference.instances`.
  '';
in

{
  options.services.pcp.inference = {
    enable = lib.mkEnableOption ''
      the Performance Metrics Inference Engine (`pmie`) component of PCP
    '';

    # TODO: can this even be set here?
    # TODO 2: what about archiver? WHAT IS GOING ON?
    # TODO 3: maybe rules.<filename> = []; ? rules.default = [ { when = "this"; do = "this"; } ];
    rules = lib.mkOption {
      type = lib.types.listOf (lib.types.submodule ruleSubmodule);
      default = [ ];
      description = ''
        The list of inference rules to evaluate
      '';
    };
  };

  config = lib.mkIf (pcpCfg.enable && cfg.enable) {
    systemd.services.pmie = {
      enable = true;
      wantedBy = [ "multi-user.target" ];
      restartTriggers = [
        pmieConfig
        config.environment.etc."pcp.conf".source
      ];
    };

    environment.etc = {
      "pcp/pmie".source = "${pcpCfg.package}/etc/pcp/pmie";
      "pcp/pmieconf".source = "${pcpCfg.package}/etc/pcp/pmieconf";
    };
  };
}
